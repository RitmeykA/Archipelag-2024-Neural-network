import geobot_sdk
import time

MAP_BLOCK_LIST = [
    (-2.26, -3.6),
    (-2.38,	-3.50),
    (-2.16,	-3.49),
    (-2.14,	-3.72),
    (-2.39,	-3.71),

    (-4.34, -1.72),
    (-4.47,	-1.59),
    (-4.2, -1.58),
    (-4.21,	-1.86),
    (-4.49,	-1.84),

    (-3.26, -1.86),
    (-3.44,	-1.7),
    (-3.03,	-1.72),
    (-3.03,	-2.08),
    (-3.46,	-2.03),

    (-2.71, -0.09),
    (-2.87,	0.03),
    (-2.55,	-0.03),
    (-2.55,	-0.22),
    (-2.89,	-0.2),

    (-3.82, 0.84),
    (-4.11,	1.13),
    (-3.53,	1.12),
    (-3.51,	0.58),
    (-4.19,	0.61),

    (-2.96, 1.62),
    (-3.1, 1.73),
    (-2.82,	1.74),
    (-2.82,	1.52),
    (-3.12,	1.54),

    (-3.21, 2.82),
    (-3.46,	3.01),
    (-2.84,	3),
    (-2.87,	2.57),
    (-3.47,	2.6),

    (-2.29, 2.11),
    (-2.43,	1.98),
    (-2.2,	2.25),

    (-2.23, 4.15),
    (-2.43,	4.34),
    (-1.98,	4.33),
    (-2.01,	3.85),
    (-2.49,	3.9),

    (-0.74, -3.79),
    (-0.94,	-3.57),
    (-0.49,	-3.58),
    (-0.51,	-4.01),
    (-0.95,	-3.97),

    (-0.08, -3.8),
    (-0.19, -3.69),
    (0.06, -3.7),
    (0,4 -3.92),
    (-0.2, -3.9),

    (1.08, -3.96),
    (0.9, -3.78),
    (1.33, -3.79),
    (1.31, -4.19),
    (0.86, -4.16),

    (-0.29, -1.81),
    (-0.58, -1.63),
    (0.02, -1.63),
    (0.02, -2.06),
    (-0.59, -2.06),

    (0.48, -1.76),
    (0.34, -1.63),
    (0.62, -1.62),
    (0.63, -1.91),
    (0.34, -1.9),

    (1.83, -2.21),
    (1.53, -2.26),
    (1.79, -1.94),
    (2.13, -2.19),
    (1.86, -2.5),

    (-1.37, -0.71),
    (-1.68,	-0.45),
    (-1.01,	-0.47),
    (-1,	-0.95),
    (-1.67,	-0.89),

    (-0.36, -0.79),
    (-0.45,	-0.65),
    (-0.27,	-0.94),

    (1.24, -0.84),
    (1.09, -0.73),
    (1.34, -0.94),

    (2.83, -1.32),
    (2.56, -1.95),
    (3.05, -1.14),
    (3.05, -1.47),
    (2.59, -1.46),

    (4.13, -0.89),
    (3.92, -0.67),
    (4.36, -0.67),
    (4.35, -1.08),
    (3.88, -1.05),

    (-1.01, 0.59),
    (-1.16,	0.71),
    (-0.88,	0.71),
    (-0.88, 0,47),
    (-1.18, 0.5),

    (0.13, -0.07),
    (-0.15,	0.12),
    (0.42,	0.13),
    (0.43,	-0.26),
    (-0.12,	-0.26),

    (0.83, 0.33),
    (0.7, 0.44),
    (0.97, 0.44),
    (0.98, 0.2),
    (0.7, 0.22),

    (1.78, 0,48),
    (1.6, 0.6),
    (1.95, 0.58),
    (1.93, 0.38),
    (1.58, 0.41),

    (2.24, 0.02),
    (1.93, 0.21),
    (2.56, 0.24),
    (2.56, -0.18),
    (1.92, -0.18),

    (2.60, 0.86),
    (2.45, 0.98),
    (2.8, 0.98),
    (2.8, 0.7),
    (2.45, 0.75),

    (-1.30, 1.71),
    (-1.58,	1.9),
    (-0.99,	1.91),
    (-0.98,	1.48),
    (-1.61,	1.52),

    (-0.4, 1.61),
    (-0.17,	1.72),
    (0.1, 1.71),
    (0.09, 1.5),
    (-0.18, 1.52),

    (0.26, 1.96),
    (0.1, 2.15),
    (0.49, 2.14),
    (0.48, 1.76),
    (0.07, 1.77),

    (1.91, 2.14),
    (1.79, 2.25),
    (2.05, 2.24),
    (2.04, 2.03),
    (1.78, 2.06),

    (2.94, 2.15),
    (2.72, 2.34),
    (3.14, 2.33),
    (3.18, 1.94),
    (2.74, 1.98),

    (3.94, 2.15),
    (3.71, 2.38),
    (4.17, 2.37),
    (4.17, 1.93),
    (3.69, 1.98),

    (-1.59, 2.94),
    (-1.69,	3.06),
    (-1.44,	3.03),
    (-1.45, 2.81),
    (-1.71, 2.83),

    (0.29, 2.88),
    (0.05, 3.12),
    (0.6, 3.1),
    (0.56, 2.69),
    (0.04, 2.71),

    (-0.19, 3.98),
    (-0.31,	4.08),
    (-0.03,	4.06),
    (-0.05, 3.81),
    (-0.35, 3.84),

    (2.06, 4.08),
    (1.72, 4.38),
    (2.39, 4.38),
    (2.35, 3.77),
    (1.66, 3.84)

]

m = geobot_sdk.Map()
m.create_map(110, 11, 11)

for blockPoint in MAP_BLOCK_LIST:
    m.add_block(geobot_sdk.Point(blockPoint[0], blockPoint[1]))

startPoint = geobot_sdk.Point(-3, -3.5)
endPoint = geobot_sdk.Point(-2.5, 1.5)

tr = m.get_trajectory(startPoint, endPoint)
print(tr)

robot = geobot_sdk.GeobotClient()

for point in tr:
    robot.go_to_local_point(point.x, point.y)
    while not robot.point_reached():
        pass
robot.go_to_local_point(-2.5, 1.5)
while not robot.point_reached():
    pass

print("kotik is reached")



